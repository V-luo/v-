动态规划，维护两个dp数组，一个最大值，一个最小值，状态转移方程max_dp[i] = max(max(max_dp[i-1]*arr[i],arr[i]),min_dp[i-1]*arr[i]);
class Solution {
public:
    double maxProduct(vector<double> arr) {
        double ans;
        vector<double> max_dp(arr.size());
        vector<double> min_dp(arr.size());
        max_dp[0] = arr[0];
        min_dp[0] = arr[0];
        ans = max_dp[0];
        for(int i=1;i<arr.size();i++)
        {
            max_dp[i] = max(max(max_dp[i-1]*arr[i],arr[i]),min_dp[i-1]*arr[i]);
            min_dp[i] = min(min(max_dp[i-1]*arr[i],arr[i]),min_dp[i-1]*arr[i]);
            ans = max(max_dp[i],ans);
        }
        return ans;
    }
};
