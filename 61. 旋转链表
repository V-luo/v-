遍历链表，记录链表长度，并且将链表首尾相连，找到链表的倒数第k+1个节点，该节点的下一个节点就是链表的头节点，并将第k+1个节点的next赋空
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(head==NULL||head->next==NULL||k==0)
            return head;
        int cnt = 1;
        ListNode* tail = head;
        while(tail->next)
        {
            cnt++;
            tail = tail->next;
        }
        tail->next = head;
        k = k%cnt;
        tial = head;
        ListNode* pre = NULL;
        for(int i = 0; i <cnt-k;i++)
        {
            pre = tail;
            tail = tail->next;
        }
        pre->next = NULL;
        return tail;
    }
};
